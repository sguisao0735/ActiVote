@model ActiVote.Web.Models.CandidateViewModel

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<h4>Candidate</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="ImageUrl" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Proposal" class="control-label"></label>
                <input asp-for="Proposal" class="form-control" />
                <span asp-validation-for="Proposal" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ImageFile" class="control-label"></label>
                <input asp-for="ImageFile" class="form-control" />
                <span asp-validation-for="ImageFile" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-success">Back to List</a>
            </div>
        </form>
    </div>
    <div class="col-md-4">
        @if (!string.IsNullOrEmpty(Model.ImageUrl))
        {
            <img src="@Url.Content(Model.ImageUrl)" alt="Image" style="width:300px;height:450px;max-width: 100%; height: auto;" />
        }
    </div>
</div>


    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
